# docker-compose.yml
version: '3.8'

services:
  auth-service:
    container_name: auth-service-${NODE_ENV:-development}
    build:
      context: .
      target: ${NODE_ENV:-development}
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${PORT:-3000}:3000"
    env_file:
      - .env
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:latest
    container_name: auth-postgres-${NODE_ENV:-development}
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5434}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: auth-kafka-${NODE_ENV:-development}
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: auth-kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: auth-zookeeper-${NODE_ENV:-development}
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  postgres_data: